
.program output
    out pins, 8


.program output_enable
    set y, 0b100    ; pin mask to match (OE Low, CE Low, RomEn High)

start:
    mov osr, null
    out pindirs, 8

wait1:
    mov osr, pins
    out x, 3
    jmp x!=y wait1  ; wait for pins to match condition

    pull            ; Load a 32-bit word from the TX FIFO into the OSR.
    out pins, 8     ; write D0-D7

    mov osr, ~null ; clear ISR
    out pindirs, 8 ; set the direction of the 8 data pins

wait2:
    mov osr, pins
    out x, 3
    jmp x!=y start ; exit loop when pins no longer match condition
    jmp wait2

.program output_enable_passthrough

.wrap_target
start:
    mov osr, pins
    out x, 2
    jmp !x en_out ; if ROM_EN = low and CE = Low, set SRAM_CE low

dis_out:
    set pins, 1
    jmp start
en_out:
    set pins, 0
    jmp start
.wrap

.program output_enable_report
    set y, 0b100    ; pin mask to match (OE Low, CE Low, RomEn High)

start:
    mov osr, pins
    out x, 3
    jmp x!=y start ; wait for pins to match condition

en_out: 
    irq wait 0 rel

wait_clear:
    mov osr, pins
    out x, 3
    jmp x!=y start ; exit loop when pins no longer match condition
    jmp wait_clear
